/* Generated by Together */

#ifndef CADVLINESYMBOL_H
#define CADVLINESYMBOL_H

#include "ILineSymbol.h"
#include "IMarkerSymbol.h"
#include "DashArray.h"
#include "DisplayCache.h"
#include "CDC.h"
#include "IArchive.h"

namespace Display{
class IMarkerSymbol;

class DISPLAY_DLL CAdvLineSymbol : public ILineSymbol 
{
friend class CArrowMarkerSymbol;

public:
	CAdvLineSymbol();

	CAdvLineSymbol(const CAdvLineSymbol& toAdvLineSymbol);

	CAdvLineSymbol& operator = (const CAdvLineSymbol& toAdvLineSymbol);

	virtual ~CAdvLineSymbol();

	virtual void SetProperties(const char* PropertyName,const _variant_t& PropertyValue);

	virtual _variant_t GetProperties(const char* PropertyName);			//得到当前符号的属性配置返回引用.如果没有此属性返回0.


	/////子类实例化实现方法
	virtual void Draw(void* pObject);						//实现绘制

	virtual SYMBOL_TYPE GetType();							//得到类类型

	virtual void Zoom(float rate);

	virtual void SelectDC(CDC * pDC);

	virtual void SetReadyDraw();

	virtual void ClearDC();

	/////线样式设置部分

	void SetLineCapsType(EXTLINE_END_CAP enumLineCapsType);	//设置线头

	EXTLINE_END_CAP GetLineCapsType();						//得到线头值

	void SetLineJointType(EXTLINE_JOIN enumLineJointType);	//设置线连接

	EXTLINE_JOIN GetLineJointType();							//得到线连接值

	void SetExtLineStyle(EXTLINE_STYLE enumLineExtStyle);	//设置高级线样式

	EXTLINE_STYLE GetExtLineStyle();							//得到高级线样式

	 void SetLineCombinType(EXTLINE_COMBIN_TYPE enumCombinType);

	 EXTLINE_COMBIN_TYPE GetLineCombinType();

	/////刷子样式设置部分

	void SetLogBrushStyle(LOGBRUSH_STYLE enumLogBrush);		//设置刷子样式

	LOGBRUSH_STYLE GetLogBrushStyle();						//得到刷子样式

	void SetLogBrushHatch(LOGBRUSH_HATCH enumLOGBRUSH_HATCH);	//设置笔刷线型

	LOGBRUSH_HATCH GetLogBrushHatch();						//得到笔刷线型

	/////装饰符设置部分

	void SetArrowMarkerType(ARROW_DIRECTION enumArrowMarkerType);//设置线端装饰符的方向，（0为不绘制，1为起始端，2为末尾端，3为两端都有）

	ARROW_DIRECTION GetArrowMarkerType();						//得到线端装饰符的方向值

	void SetArrowNum(long lArrowNum);						//设置装饰符的个数，不算首末端的,默认为0

	long GetArrowNum();										//得到装饰符的个数

	void SetFixRotation(bool bFixRotation);					//设置是否装饰符方向固定或跟随线形走势

	bool GetFixRotation();									//得到装饰符方向的设定

	void SetFlipFirst(bool bFlipFirst);						//设置是否起始点装饰符反向

	bool GetFlipFirst();									//得到起始点装饰符反向的设定

	void SetFlipAll(bool bFlipAll);							//设置是否反向所有装饰点

	bool GetFlipAll();										//得到是否反向所有装饰店的设定

	void SetArrowMarkerSymbol(IMarkerSymbolPtr pArrowMarkerSymbol);//设置线端装饰符号

	IMarkerSymbolPtr GetArrowMarkerSymbol();					//得到线端装饰符号


	///
	void SetDashGroup(CDashArray &DashArray);			//设置破折号数组

	CDashArray& GetDashGroup();							//得到破折号数组

	void DrawArrow(void* pObject);										//绘制箭头点符号装饰符

protected://类自身所需变量

	EXTLINE_END_CAP m_enumLineCapsType;						//高级线的线头类型{flat,round,square}，默认为圆

	EXTLINE_JOIN m_enumLineJointType;						//高级线的线连接类型{miter,round,bevel}，默认为圆

	EXTLINE_STYLE m_enumExtLineType;							//高级线的样式，默认为实心笔

	EXTLINE_COMBIN_TYPE m_enumCombinType;						//高级线的结合类型，默认为几何笔

	//笔刷的设置
	LOGBRUSH_STYLE m_enumLogBrushType;						//笔刷设置，默认为实心刷

	LOGBRUSH_HATCH m_enumLOGBRUSH_HATCH;						//笔刷线型，默认为水平线

	//装饰符号设置部分
	ARROW_DIRECTION m_enumArrowMarkerType;						//箭头类型{NULL,sBegin,sEnd,d}

	long m_lArrowNum;										//装饰符的数量，不算首尾的两个,默认为0

	bool m_bFixRotation;									//箭头方向固定为ture,跟随线形则为false

	bool m_bFlipFirst;										//反向装饰符的首个,默认为false

	bool m_bFlipAll;										//反向全部装饰符,默认为false	

	IMarkerSymbolPtr m_pArrowMarkerSymbol;					//存放装饰符对象的指针

	CDashArray *m_pDashGroup;								//扩展笔时，根据需要设置破折号样式数组及其个数个数。其值默认为0

	DISPLAY_HANDLE_NODE* m_hPenHandle;

	bool m_bDrawFlag;										//由传入的破折号数组判断其变量设置是否正确，不正确则不绘制

	long m_lOffsetLineCount;

	LineJointStyle m_LineJointStyle;						//内部调用
	float storeArrowAngle;									//内部调用

protected:
	virtual void OnUnitChanged(SYSTEM::SYS_UNIT_TYPE oldUnit , SYSTEM::SYS_UNIT_TYPE newUnit);
	virtual void OnChangingInSelectDC();
public:

    virtual void serialization(SYSTEM::IArchive & ar);
};

typedef SYSTEM::CSmartPtr<CAdvLineSymbol> IAdvLineSymbolPtr;
}
#endif //CADVLINESYMBOL_H
