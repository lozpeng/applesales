/* Generated by gether */

#ifndef CHASHLINESYMBOL_H
#define CHASHLINESYMBOL_H
#include "AdvLineSymbol.h"
#include "SimpleLineSymbol.h"
#include "CDC.h"
#include "IArchive.h"

namespace Display{
class DISPLAY_DLL CHashLineSymbol : public Display::CAdvLineSymbol 
{
	friend class Display::ILineSymbol;
public:
	CHashLineSymbol();

	virtual ~CHashLineSymbol();

	CHashLineSymbol(const CHashLineSymbol& HashLineSymbol);

	CHashLineSymbol& operator = (const CHashLineSymbol& HashLineSymbol);

	virtual void Draw(void* pObject);					//实现绘制

	virtual SYMBOL_TYPE GetType();						//得到类类型

	virtual void Zoom(float rate);

	virtual void SetProperties(const char* PropertyName , const _variant_t& PropertyValue );

	virtual _variant_t GetProperties(const char* PropertyName );			//得到当前符号的属性配置返回引用.如果没有此属性返回0.

	virtual void SetLineColor(unsigned long lColor);
	/////类自身方法
	virtual void SelectDC(Display::CDC * pDC);

	virtual void SetReadyDraw();

	void SetHashAngle(float fAngle);					//设置碎切线的角度

	float GetHashAngle();

	void SetLineSymbol(ILineSymbolPtr pLs);			//传入要使用的线符号，作为点

	ILineSymbolPtr GetLineSymbol();					//得到所传入的线符号

	virtual void ClearDC();

protected:
	void DrawArrow(void* pObject);	
protected:
	virtual void OnUnitChanged(SYSTEM::SYS_UNIT_TYPE oldUnit , SYSTEM::SYS_UNIT_TYPE newUnit);
	virtual void OnChangingInSelectDC();

private:
	float m_fHashAngle;

	ILineSymbolPtr m_pLineSymbol;

	long m_lOffsetLineCount;							//返回的偏移线的点个数，内部调用

	long *pMarkGroup;									//返回的偏移线的点数组，内部调用

	double *pMarkAngle;									//返回偏移线点的角度，内部调用
	
public:

    virtual void serialization(SYSTEM::IArchive & ar);
};

typedef SYSTEM::CSmartPtr<CHashLineSymbol> IHashLineSymbolPtr;
}
#endif //CHASHLINESYMBOL_H
