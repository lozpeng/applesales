/* Generated by Together */

#ifndef CLINEFILLSYMBOL_H
#define CLINEFILLSYMBOL_H
#include "IFillSymbol.h"
#include "CDC.h"
#include "IArchive.h"

namespace Display{
class DISPLAY_DLL CLineFillSymbol : public IFillSymbol
{
friend class ILineSymbol;
public:

	CLineFillSymbol();


	CLineFillSymbol(const CLineFillSymbol& toLineFillSymbol);

	CLineFillSymbol& operator = (const CLineFillSymbol& toLineFillSymbol);

	 ~CLineFillSymbol();

	void SetOffset(	float Offset);//设置偏移
	

	void SetSeparation(	float Separation);//设置间隔
	

	float  GetOffset() ;//得到偏移
	

	float GetSeparation();  //得到间隔
	

	void SetLineSymbol(ILineSymbolPtr pLineSymbol);//设置点符号
	

	ILineSymbolPtr GetLineSymbol();
	virtual void Draw(void * pObject );     //绘制函数    
	

	virtual SYMBOL_TYPE GetType();			//得到类类型，抽象方法，子类须实现
	

	virtual void SelectDC(Display::CDC *pDC);			//装配画布，抽象方法，子类须实现
	

	virtual void SetReadyDraw();			//设置当前符号为可画	
	

	void SetFillColor(unsigned long color);
	//设置符号颜色

	unsigned long GetFillColor();
	//取得符号颜色

	void SetAngle(float Angle);


	float GetAngle();

	virtual void SetProperties(const char* PropertyName , const _variant_t& PropertyValue);

	virtual _variant_t GetProperties(const char* PropertyName);			//得到当前符号的属性配置

	virtual void Zoom(float rate);

    virtual void serialization(SYSTEM::IArchive & ar);
	
	virtual void ClearDC();

protected:
	virtual void OnUnitChanged(SYSTEM::SYS_UNIT_TYPE oldUnit , SYSTEM::SYS_UNIT_TYPE newUnit);
	virtual void OnChangingInSelectDC();

private:
	
	float m_fAngle;			//填充线的旋转角度
	long m_lOffset;			//填充线的偏移量
	unsigned long m_lSeparation;		//填充线的间隔量
	float m_fOffset;
	float m_fSeparation;
	ILineSymbolPtr m_pLineSymbol;//线符号

};

typedef SYSTEM::CSmartPtr<CLineFillSymbol> ILineFillSymbolPtr;
}
#endif //CLINEFILLSYMBOL_H
