/* Generated by Together */
/*作者：张维
描述：复合点符号类
版本号：1.0
创建日期：2007-5-8 下午05:31:56
*/

#ifndef CCOMPLEXMARKERSYMBOL_H
#define CCOMPLEXMARKERSYMBOL_H
#include "stdafx.h"
#include "IMarkerSymbol.h"
#include "IArchive.h"
#include "alm.h"
#include "IComplexSymbol.h"

namespace Display{
class DISPLAY_DLL CComplexMarkerSymbol : public IMarkerSymbol , public IComplexSymbol
{
public:
	/*using IMarkerSymbol::AddRef;
	using IMarkerSymbol::Release;*/
	using IMarkerSymbol::m_lColor;
	using IMarkerSymbol::m_pDC;


	CComplexMarkerSymbol();

	CComplexMarkerSymbol(const CComplexMarkerSymbol& ComplexMarkerSymbol);

	//重载"="
	CComplexMarkerSymbol& operator = (const CComplexMarkerSymbol& ComplexMarkerSymbol);

	virtual ~CComplexMarkerSymbol();

	/////子类实例化须实现方法

	// 函数名称   : Draw(void* pObject)
	// 描述       : 实现绘制
	// 返回类型   : virtual void 
	// 参数       : void* pObject
	virtual void Draw(void* pObject);						//实现绘制

	// 函数名称   : GetType()
	// 描述       : 得到类类型
	// 返回类型   : virtual SYMBOL_TYPE 
	virtual SYMBOL_TYPE GetType();							//得到类类型

	// 函数名称   : SelectDC(CDC *pDC)
	// 描述       : 配置笔，刷，字体等
	// 返回类型   : virtual void 
	// 参数       : CDC *pDC   绘制句柄 
	virtual void SelectDC(CDC *pDC);						//配置笔，刷，字体等

	// 函数名称   : Zoom(float rate)
	// 描述       : 根据比例进行符号缩放
	// 返回类型   : virtual void 
	// 参数       : float rate
	virtual void Zoom(float rate);

	//////重载父类的方法

	// 函数名称   : SetOffSet(long x,long y)
	// 描述       : 设置点符号的偏移量
	// 返回类型   : virtual void 
	// 参数       : long x
	// 参数       : long y
	virtual void SetOffSet(float x , float y);					//设置点符号的偏移量

	// 函数名称   : GetMarkerSize()
	// 描述       : 获得点符号尺寸
	// 返回类型   : virtual unsigned long 
	virtual float GetMarkerSize();

	// 函数名称   : SetAngle(float fAngle)
	// 描述       : 设置点符号的角度
	// 返回类型   : virtual void 
	// 参数       : float fAngle   点符号的角度
	virtual void SetAngle(float fAngle);					//设置点符号的角度

	// 函数名称   : SetMarkerSize(unsigned long Markersize)
	// 描述       : 设置符号的尺寸
	// 返回类型   : virtual void 
	// 参数       : unsigned long Markersize   符号的尺寸
	virtual void SetMarkerSize(float Markersize);		//设置符号的尺寸

	// 函数名称   : SetMaskDrawable(bool bMask)
	// 描述       : 设置是否绘制外围轮廓
	// 返回类型   : virtual void 
	// 参数       : bool bMask
	virtual void SetMaskDrawable(bool bMask);				//设置是否绘制外围轮廓

	// 函数名称   : SetMask(ISymbolPtr pSymbolMask)
	// 描述       : 装入外围轮廓指针
	// 返回类型   : virtual void 
	// 参数       : ISymbolPtr pSymbolMask
	virtual void SetMask(ISymbolPtr pSymbolMask);			//装入外围轮廓指针

	// 函数名称   : SetMarkerColor(unsigned long lColor)
	// 描述       : 设置点符号颜色
	// 返回类型   : virtual void 
	// 参数       : unsigned long lColor
	virtual void SetMarkerColor(unsigned long lColor);		//设置点符号颜色

	// 函数名称   : DrawLegend( DIS_RECT * rect , int nFlag )
	// 描述       : 绘制图例
	// 返回类型   : virtual void 
	// 参数       : DIS_RECT * rect   设置区域
	// 参数       : int nFlag    判断显示方式（直线或折线）
	virtual void DrawLegend( DIS_RECT * rect , int nFlag );

	// 函数名称   : SetProperties( const char* PropertyName , const _variant_t& PropertyValue )
	// 描述       : 设置属性
	// 返回类型   : virtual void 
	// 参数       : const char* PropertyName   属性名称
	// 参数       : const _variant_t& PropertyValue   属性值
	virtual void SetProperties( const char* PropertyName , const _variant_t& PropertyValue );

	// 函数名称   : GetProperties(const char* PropertyName)
	// 描述       : 得到属性
	// 返回类型   : virtual _variant_t 
	// 参数       : const char* PropertyName   属性名称
	virtual _variant_t GetProperties(const char* PropertyName);

/////父类抽象方法

	// 函数名称   : Add(ISymbolPtr symbol)
	// 描述       : 添加符号图层
	// 返回类型   : virtual bool 
	// 参数       : ISymbolPtr symbol
	virtual bool Add(ISymbolPtr symbol);			//添加符号

	// 函数名称   : Insert( int index , ISymbolPtr symbol , bool state )
	// 描述       : 从索引对应的位置插入符号
	// 返回类型   : virtual bool 
	// 参数       : int index   索引
	// 参数       : ISymbolPtr symbol   符号
	// 参数       : bool state   判断是否可见
	virtual bool Insert( int index , ISymbolPtr symbol , bool state );

	// 函数名称   : SetSymbol( int index , ISymbolPtr symbol )
	// 描述       : 设置索引对应的符号
	// 返回类型   : virtual bool 
	// 参数       : int index   索引
	// 参数       : ISymbolPtr symbol   符号
	virtual bool SetSymbol( int index , ISymbolPtr symbol );

	virtual void ClearDC();
public:
	
	// 函数名称   : serialization(SYSTEM::IArchive &ar)
	// 描述       : 序列化操作
	// 返回类型   : virtual void 
	// 参数       : SYSTEM::IArchive &ar   档案文件流
	virtual void serialization(SYSTEM::IArchive & ar);
protected:
	virtual void OnUnitChanged(SYSTEM::SYS_UNIT_TYPE oldUnit , SYSTEM::SYS_UNIT_TYPE newUnit);
	virtual void OnChangingInSelectDC();
private:
	float m_fCurrentMarkerAngle;								//用于储存当前设置的符合点符号角度
	
};
typedef SYSTEM::CSmartPtr<CComplexMarkerSymbol> CComplexMarkerSymbolPtr;
}
#endif //CTOCOMPLEXMARKERSYMBOL_H
